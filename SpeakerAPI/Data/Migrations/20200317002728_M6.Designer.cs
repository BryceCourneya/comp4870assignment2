// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SpeakerAPI.data.migrations
{
    [DbContext(typeof(SpeakerDbContext))]
    [Migration("20200317002728_M6")]
    partial class M6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment2Library.Speaker", b =>
                {
                    b.Property<string>("SpeakerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeakerId");

                    b.ToTable("Speakers");

                    b.HasData(
                        new
                        {
                            SpeakerId = "3ee00e53-f591-4cf9-a9bf-e71daf11200b",
                            FirstName = "Tom",
                            LastName = "Day"
                        },
                        new
                        {
                            SpeakerId = "6770d994-6e0c-4374-91f5-efadbd0368c9",
                            FirstName = "John",
                            LastName = "Fox"
                        },
                        new
                        {
                            SpeakerId = "b4dc5948-2db1-481e-a88a-269e51d846cc",
                            FirstName = "Art",
                            LastName = "Ash"
                        },
                        new
                        {
                            SpeakerId = "56afc14c-b967-486b-a513-b3ef08749097",
                            FirstName = "Mia",
                            LastName = "Hay"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
